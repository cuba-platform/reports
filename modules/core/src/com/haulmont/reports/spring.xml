<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2008-2019 Haulmont.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context">

    <context:component-scan base-package="com.haulmont.reports"/>

    <bean id="reporting_lib_Scripting" class="com.haulmont.reports.libintegration.CubaReportingScripting"/>
    <bean id="reporting_lib_SqlParametersConverter" class="com.haulmont.reports.libintegration.SqlParametersConverter"/>
    <bean id="reporting_lib_JpqlParametersConverter"
          class="com.haulmont.reports.libintegration.JpqlParametersConverter"/>

    <bean id="reporting_lib_GroovyDataLoader" class="com.haulmont.reports.libintegration.CubaGroovyDataLoader">
        <constructor-arg ref="reporting_lib_Scripting"/>
    </bean>

    <bean id="reporting_lib_JsonDataLoader" class="com.haulmont.reports.libintegration.CubaJsonDataLoader">
        <constructor-arg ref="reporting_lib_Scripting"/>
    </bean>

    <bean id="reporting_lib_SqlDataLoader" class="com.haulmont.reports.libintegration.CubaSqlDataLoader">
        <constructor-arg ref="cubaDataSource"/>
        <property name="parametersConverter" ref="reporting_lib_SqlParametersConverter"/>
    </bean>
    <bean id="reporting_lib_JpqlDataLoader" class="com.haulmont.reports.libintegration.JpqlDataDataLoader">
        <property name="parametersConverter" ref="reporting_lib_JpqlParametersConverter"/>
    </bean>
    <bean id="reporting_lib_SingleEntityDataLoader" class="com.haulmont.reports.libintegration.SingleEntityDataLoader"/>
    <bean id="reporting_lib_MultiEntityDataLoader" class="com.haulmont.reports.libintegration.MultiEntityDataLoader"/>

    <bean id="reporting_lib_OfficeIntegration"
          class="com.haulmont.reports.libintegration.CubaOfficeIntegration">
        <constructor-arg value="${reporting.openoffice.path?:/}"/>
        <constructor-arg>
            <value>#{"${reporting.openoffice.ports?:8100|8101|8102|8103}".split('[,|]')}</value>
        </constructor-arg>
        <property name="displayDeviceAvailable">
            <value>${reporting.displayDeviceAvailable?:false}</value>
        </property>
        <property name="timeoutInSeconds">
            <value>${reporting.openoffice.docFormatterTimeout?:20}</value>
        </property>
        <property name="temporaryDirPath">
            <value>${cuba.tempDir}/reporting/</value>
        </property>
        <property name="countOfRetry">
            <value>${reporting.openoffice.countOfRetry?:3}</value>
        </property>
    </bean>

    <bean id="reporting_lib_CubaFieldFormatProvider" class="com.haulmont.reports.libintegration.CubaFieldFormatProvider"/>

    <bean id="reporting_lib_InlinersProvider"
          class="com.haulmont.reports.libintegration.CubaInlinersProvider"/>

    <bean id="reporting_lib_FormatterFactory"
          class="com.haulmont.reports.libintegration.CubaFormatterFactory">
        <property name="useOfficeForDocumentConversion" value="${reporting.openoffice.docx.useOfficeForDocumentConversion?:false}"/>
        <property name="officeIntegration" ref="reporting_lib_OfficeIntegration"/>
        <property name="defaultFormatProvider" ref="reporting_lib_CubaFieldFormatProvider"/>
        <property name="inlinersProvider" ref="reporting_lib_InlinersProvider"/>
        <property name="scripting" ref="reporting_lib_Scripting"/>
    </bean>

    <bean id="reporting_lib_LoaderFactory" class="com.haulmont.yarg.loaders.factory.DefaultLoaderFactory">
        <property name="dataLoaders">
            <map>
                <entry key="sql" value-ref="reporting_lib_SqlDataLoader"/>
                <entry key="groovy" value-ref="reporting_lib_GroovyDataLoader"/>
                <entry key="jpql" value-ref="reporting_lib_JpqlDataLoader"/>
                <entry key="json" value-ref="reporting_lib_JsonDataLoader"/>
                <entry key="single" value-ref="reporting_lib_SingleEntityDataLoader"/>
                <entry key="multi" value-ref="reporting_lib_MultiEntityDataLoader"/>
            </map>
        </property>
    </bean>

    <bean name="reporting_lib_ExtractionControllerFactory"
          class="com.haulmont.yarg.reporting.extraction.DefaultExtractionControllerFactory">
        <constructor-arg ref="reporting_lib_LoaderFactory"/>
        <property name="extractionControllers">
            <map>
                <entry key="CROSS" value-ref="reporting_lib_CrossTabExtractionController"/>
            </map>
        </property>
    </bean>

    <bean name="reporting_lib_PreprocessorFactory"
          class="com.haulmont.yarg.reporting.extraction.DefaultPreprocessorFactory">
        <property name="preprocessors">
            <map>
                <entry key="sql" value-ref="reporting_lib_SqlQueryLoaderPreprocessor"/>
                <entry key="jpql" value-ref="reporting_lib_SqlQueryLoaderPreprocessor"/>
            </map>
        </property>
    </bean>

    <bean name="reporting_lib_CrossTabExtractionController"
          class="com.haulmont.yarg.reporting.extraction.controller.CrossTabExtractionController" scope="prototype">
        <constructor-arg ref="reporting_lib_ExtractionControllerFactory"/>
        <constructor-arg ref="reporting_lib_LoaderFactory"/>

        <property name="preprocessorFactory" ref="reporting_lib_PreprocessorFactory" />
    </bean>

    <bean name="reporting_lib_SqlQueryLoaderPreprocessor"
          class="com.haulmont.yarg.reporting.extraction.preprocessor.SqlCrosstabPreprocessor" scope="prototype">
    </bean>

    <bean name="reporting_lib_DataExtractor" class="com.haulmont.reports.libintegration.CubaDataExtractor">
        <constructor-arg ref="reporting_lib_LoaderFactory"/>
        <property name="extractionControllerFactory" ref="reporting_lib_ExtractionControllerFactory" />
    </bean>

    <bean name="reporting_lib_StringConverter" class="com.haulmont.reports.libintegration.CubaObjectToStringConverter"/>

    <bean id="reporting_lib_Reporting" class="com.haulmont.reports.libintegration.CubaReporting">
        <property name="formatterFactory" ref="reporting_lib_FormatterFactory"/>
        <property name="loaderFactory" ref="reporting_lib_LoaderFactory"/>
        <property name="dataExtractor" ref="reporting_lib_DataExtractor"/>
        <property name="objectToStringConverter" ref="reporting_lib_StringConverter"/>
        <property name="scripting" ref="reporting_lib_Scripting"/>
        <property name="reportingApi" ref="report_ReportingApi"/>
    </bean>

    <!-- MBeans registration -->
    <bean id="reports_MBeanExporter" class="com.haulmont.cuba.core.sys.jmx.MBeanExporter" lazy-init="false">
        <property name="beans">
            <map>
                <entry key="${cuba.webContextName}.reports:type=CubaOfficeIntegration"
                       value-ref="reporting_lib_OfficeIntegration"/>
                <entry key="${cuba.webContextName}.reports:type=ReportImportExport"
                       value="reporting_ReportImportExport"/>
                <entry key="${cuba.webContextName}.reports:type=ReportingMigrator"
                       value="reporting_ReportingMigrator"/>
            </map>
        </property>
    </bean>

</beans>
