#
# Copyright (c) 2008-2019 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
menu-config.reports=Reports
menu-config.report$Report.browse=Reports
menu-config.report$Report.run=Run Reports
menu-config.report$ReportGroup.browse=Report Groups
menu-config.report$showChart=Show Charts
menu-config.report$showReportTable=Show Tables
menu-config.report$showPivotTable=Show Pivot Tables

actions.Report=Report

reportException.message=An error occurred while generating report
reportException.failedConnectToOffice=Couldn't find LibreOffice instance
reportException.noOpenOfficeFreePorts=Couldn't connect to LibreOffice instance. No free ports available.
reportException.unableToImportReport=Unable to import reports
reportException.wrongFileType=Wrong file type: %s. Expecting ZIP.
reportException.noFile=File was not uploaded

inputParameters=Input entity parameters
reportBrowser=Reports
parameterEditor=Parameter editor
reportEditor=Report editor
reportEditor.format = Edit report "%s"
bandDefinitionEditor=Band editor
templateEditor=Template editor
reportGroupBrowser=Report Groups
reportGroupEditor=Report Group
localeCaption=Localized name
groupLocaleCaption=Localization
groupProperties=Group

report.new=New
report.bands=Report Bands
report.bandDetails=Band Details
report.defaultTemplate=Set default
report.restAccess=Visible for REST API
report.system=System

report.reportRunFilterUpdatedDate=Updated After
report.reportRunFilterCode=Code
report.reportRunFilterGroup=Group
report.reportRunFilterName=Name
report.reportFilterButton=Search
report.reportClearButton=Clear

definition.name=Band Name
definition.orientation=Orientation
definition.parentBand=Parent Band

dataSet.name=Dataset name
dataSet.type=Dataset type
dataSet.text=Script
dataSet.fullScreen=Full screen
dataSet.urlJsonSource=URL
dataSet.urlJsonSourceMessage=URL is required
dataSet.jsonSourceType=JSON source
dataSet.jsonParameter=Parameter
dataSet.jsonPathQueryText=JSON path query is required
dataSet.linkParameterName=Link field
dataSet.jsonPathQuery=JSON path query
dataSet.entityParamName=Entity parameter name
dataSet.entitiesParamName=List of entities parameter name
dataSet.editView=Select entity attributes
dataSet.useExistingView=Use existing view
dataSet.viewName=View name
dataSet.dataStore=Data store
dataSet.processTemplate=Preprocess query as Groovy template
dataSet.entityAliasNull=Parameter is empty
dataSet.entityAliasInvalid=Parameter with name [%s] is incorrect
dataSet.cantFindCollectionProperty=Can`t find collection property %s for entity %s
dataSet.entityWasChanged=Entity was changed. Now you are editing available fields for a new entity %s
dataSet.dataStoreMain=Main
dataSet.textHelp=Here you can set a Groovy script that will produce the dataset. The following variables are passed into the script:\
  <ul>\
  <li><code>params</code> - external report parameters map</li>\
  <li><code>parentBand</code> - parent band as an object of the <code>BandData</code> type</li>\
  <li><code>persistence</code> - an object of the <code>Persistence</code> type that provides access to the data storage</li>\
  <li><code>dataManager</code> - an object of the <code>DataManager</code> type that provides CRUD functionality</li>\
  <li><code>metadata</code> - an object of the <code>Metadata</code> type that provides access the application metadata</li>\
  <li><code>security</code> - an object of the <code>Security</code> type used to check user access rights to different\
  <br>objects in the system</li>\
  <li><code>userSession</code> - an object of the <code>UserSession</code> type associated with the currently\
  <br>authenticated user</li>\
  <li><code>userSessionSource</code> - an object of the <code>UserSessionSource</code> type which is used to obtain\
  </br>current user session object</li>\
  <li><code>timeSource</code> - an object of the <code>TimeSource</code> type used to obtain the current time</li>\
  <li><code>transactional</code> - a method that takes a closure, which should be executed in a new transaction,\
  <br>as parameter. The current <code>EntityManager</code> becomes the closure parameter</li>\
  <ul>\
  
dataSet.jsonSourceGroovyCodeHelp=Here you can set a Groovy script that will return the string containing JSON. The following variables are passed into the script:\
  <ul>\
  <li><code>params</code> - external report parameters map</li>\
  <li><code>parentBand</code> - parent band as an object of the <code>BandData</code> type</li>\
  <li><code>persistence</code> - an object of the <code>Persistence</code> type that provides access to the data storage</li>\
  <li><code>dataManager</code> - an object of the <code>DataManager</code> type that provides CRUD functionality</li>\
  <li><code>metadata</code> - an object of the <code>Metadata</code> type that provides access the application metadata</li>\
  <li><code>security</code> - an object of the <code>Security</code> type used to check user access rights to different\
  <br>objects in the system</li>\
  <li><code>userSession</code> - an object of the <code>UserSession</code> type associated with the currently\
  <br>authenticated user</li>\
  <li><code>userSessionSource</code> - an object of the <code>UserSessionSource</code> type which is used to obtain\
  </br>current user session object</li>\
  <li><code>timeSource</code> - an object of the <code>TimeSource</code> type used to obtain the current time</li>\
  <li><code>transactional</code> - a method that takes a closure, which should be executed in a new transaction,\
  <br>as parameter. The current <code>EntityManager</code> becomes the closure parameter</li>\
  <ul>\

dataSet.jsonPathQueryHelp=Here you can set JSON path query to query the JSON tree.\
  <p>Example:</p>\
  Having the following JSON structure, we can select all books with the the query <strong>$.store.book[*]</strong>\
  <br>\
  <code>\
            {<br>\
             &nbsp "store": {<br>\
             &nbsp &nbsp "book": [<br>\
             &nbsp &nbsp &nbsp {<br>\
             &nbsp &nbsp &nbsp &nbsp "category": "reference",<br>\
             &nbsp &nbsp &nbsp &nbsp "author": "Nigel Rees",<br>\
             &nbsp &nbsp &nbsp &nbsp "title": "Sayings of the Century",<br>\
             &nbsp &nbsp &nbsp &nbsp "price": 8.95<br>\
             &nbsp &nbsp &nbsp },<br>\
             &nbsp &nbsp &nbsp {<br>\
             &nbsp &nbsp &nbsp &nbsp "category": "fiction",<br>\
             &nbsp &nbsp &nbsp &nbsp "author": "Evelyn Waugh",<br>\
             &nbsp &nbsp &nbsp &nbsp "title": "Sword of Honour",<br>\
             &nbsp &nbsp &nbsp &nbsp "price": 12.99,<br>\
             &nbsp &nbsp &nbsp &nbsp "isbn": "0-553-21311-3"<br>\
             &nbsp &nbsp &nbsp }<br>\
             &nbsp &nbsp ],<br>\
             &nbsp &nbsp "bicycle": {<br>\
             &nbsp &nbsp &nbsp "color": "red",<br>\
             &nbsp &nbsp &nbsp "price": 19.95<br>\
             &nbsp &nbsp }<br>\
             &nbsp }<br>\
            }<br>\
  </code>\
  <br>\
  For more sophisticated examples please refer for JSON path documentation.

generalFrame.createBandDefinition=Create band
generalFrame.removeBandDefinition=Remove band
generalFrame.up=Up
generalFrame.down=Down

templateEditor.uploadSuccess=File was uploaded
templateEditor.uploadUnsuccess=File was not uploaded
templateEditor.classRequired=Please specify custom definition
templateEditor.customDefinedBy=Please specify custom definition type
templateEditor.warning=Warning
templateEditor.clearTemplateMessage=Template text will be deleted on save

securityFrame.roles=Roles
securityFrame.screens=Screens

roles.roleName=Role name
roles.addRole=Add role
roles.removeRole=Remove role

screens.createScreen=Add screen
screens.removeScreen=Remove screen
screens.screenId=Screen Id

parameters.caption=Caption
parameters.type=Parameter type
parameters.alias=Parameter alias
parameters.metaClass=Entity
parameters.enum=Enumeration
parameters.screen=Entity selection screen
parameters.defaultValue=Default value
parameters.required=Required parameter?
parameters.hidden=Hidden
parameters.predefinedTransformation=Predefined transformation
parameters.validateFields=Validate
parameters.crossFieldValidate=Validate
parameters.groovyScript=Groovy script
parameters.wildcards=Wildcards
parameters.nameMsg=Parameter name isn't specified
parameters.typeMsg=Parameter type isn't specified
parameters.aliasMsg=Parameter alias isn't specified
parameters.requiredMetaClass=Parameter entity isn't specified
parameters.requiredEnumClass=Parameter enumeration isn't specified
parameters.localesTab=Localization
parameters.optionsTab=Properties
parameters.transformationTab=Transformation
parameters.validationTab=Validation
parameters.defaultDateIsCurrent=Default date(time)\nis current

valuesFormats.name=Value name
valuesFormats.format=Format string
formatsEdit=Formatter

parametersAndFormatsTab=Parameters and Formats
generalTab=Report structure
templatesTab=Templates
securityTab=Roles and Screens
localesTab=Localization

button.import=Import
button.run=Run

report.nameMsg=Report name isn't specified
report.reportTypeMsg=Report type isn't specified
report.templateMsg=Default template isn't specified
report.parameters=Parameters
report.validationScriptOn=Validation script enabled
report.validationScriptOff=Validation script
report.crossParametersValidation=Cross parameters validation
report.templates=Templates
report.valuesFormats=Value formats
report.wizard=Using wizard
valueNameMsg=Value name isn't specified
formatStringMsg=Format string isn't specified
unableToDeleteSystemReportGroup=Unable to delete system group of reports
unableToDeleteNotEmptyReportGroup=Unable to delete group with reports
unableToSaveTemplateWhichDefinedWithClass=Unable to save template which defined with class

fileUploadDialog.caption=Sending the file

template.code=Template code
template.outputType=Output type
template.file=Template file
template.outputNamePattern=Output name pattern
template.typeForHtml=Template type
template.groovyType=Groovy template
template.freemarkerType=Freemarker template
template.isCustom=Is custom
template.customDefinition=Custom definition
template.customDefinedBy=Defined by
template.isAlterableOutput=Is alterable output
template.alterable=Alterable
template.namePatternText=Output name pattern
template.namePatternTextHelp=Optional file name pattern, which will be used for the produced report download. \
  It can either be a constant string or contain report parameter as a variable, e.g.: \
  <center><br/><code>${header.authorName}.xlsx</code></center>\
  <br/>More sophisticated patterns with several parameters and string concatenation can also be \
  created as a script in any band of report structure, e.g.: \
  <center><br/><code>${Root.title}.xlsx</code></center>\
  <br/>where <code>title</code> is a result of the script: \
  <center><br/><code>[['title' : ('Report for ' + params['author'].firstName\
  <br/>+ ' ' + params['author'].lastName)]]</code></center>

template.outputTypeMsg=Please specify output type
template.uploadTemplate=Please upload template file
template.codeMsg=Please specify template code
template.copyNamingPattern=%s copy

error.rootBandNull=Root band is not set
error.bandNameNull=Band name is not set
error.bandNamesDuplicated=Band's name duplicated [%s]
error.bandOrientationNull=Band's [%s] orientation is not set
error.dataSetNameNull=Data set name is not set
error.dataSetTypeNull=Data set's [%s] type is not set
error.dataSetScriptNull=Data set's [%s] script is empty
error.jsonDataSetScriptNull=JSON data set's [%s] script is empty

actions.printAll=Print all
actions.printSelected=Print selected

notification.defaultTemplateIsEmpty=Default template isn't specified
notification.fileIsNotAllowedForSpecificTypes=Unable to save template file for chart/table/pivot table 
notification.selectReport=Please select a report
notifications.confirmPrintAllheader=Confirmation
notifications.confirmPrintAll=Are you sure you want to print all the data?
notifications.confirmPrintSelected=Which data should be used for report?
notifications.confirmPrintSelectedheader=Select
notifications.noSelectedEntity=No data selected

description.downloadTemplate=Download template
description.uploadTemplate=Upload template
description.createTemplate=Create template
description.editTemplate=Edit template

description.createBand=Create band
description.removeBand=Remove band
description.moveUp=Move up
description.moveDown=Move down

description.createDataSet=Create data set
description.removeDataSet=Remove data set

export=Export
copy=Copy
runReport=Run

runReportBackgroundTitle = Running Report
runReportBackgroundMessage = Please wait while the report document is being generated

inputOutputTypesError=Template type and output type are incompatible
caption.preview=Preview
caption.category=Category

IDX_REPORT_GROUP_UNIQ_TITLE=A report group with the same title already exists
IDX_REPORT_REPORT_UNIQ_NAME=A report with the same name already exists

chartEdit.series=Series
chartEdit.seriesEmptyMsg=Please specify series
chartEdit.seriesTypeNullMsg=Please specify type for series
chartEdit.seriesValueFieldNullMsg=Please specify value field for series
chartEdit.jsonConfig=JSON configuration
chartEdit.invalidJson=Invalid JSON configuration
chartEdit.serialJsonConfigHelp=Here you can set an additional JSON configuration for a serial chart.\
  <br/>For example:\
  </br><code>{\
  <br/>&nbsp &nbsp "theme": "dark",\
  <br/>&nbsp &nbsp "backgroundAlpha": 1,\
  <br/>&nbsp &nbsp "backgroundColor": "black",\
  <br/>&nbsp &nbsp "startDuration": 1,\
  <br/>&nbsp &nbsp "depth3D": 20,\
  <br/>&nbsp &nbsp "angle": 30,\
  <br/>&nbsp &nbsp "graphs": [{\
  <br/>&nbsp &nbsp &nbsp &nbsp "fillAlphas": 1,\
  <br/>&nbsp &nbsp &nbsp &nbsp "lineAlpha": 1,\
  <br/>&nbsp &nbsp &nbsp &nbsp "fillColors": ["#f12711", "#f5af19"],\
  <br/>&nbsp &nbsp &nbsp &nbsp "lineColor": "black",\
  <br/>&nbsp &nbsp &nbsp &nbsp "balloonColor": "#f12711"\
  <br/>&nbsp &nbsp }]\
  <br/>}</code>\
  </br>Note that this configuration can override the configuration automatically generated from the reporting API.

chartEdit.pieJsonConfigHelp=Here you can set an additional JSON configuration for a pie chart.\
  <br/>For example:\
  </br><code>{\
  <br/>&nbsp &nbsp "theme": "dark",\
  <br/>&nbsp &nbsp "backgroundAlpha": 1,\
  <br/>&nbsp &nbsp "backgroundColor": "black",\
  <br/>&nbsp &nbsp "depth3D": 20,\
  <br/>&nbsp &nbsp "angle": 40,\
  <br/>&nbsp &nbsp "colors": [\
  <br/>&nbsp &nbsp &nbsp &nbsp "#0dffdc",\
  <br/>&nbsp &nbsp &nbsp &nbsp "#00c6eb",\
  <br/>&nbsp &nbsp &nbsp &nbsp "#0091ff",\
  <br/>&nbsp &nbsp &nbsp &nbsp "#0c4ae8",\
  <br/>&nbsp &nbsp &nbsp &nbsp "#1111fa"\
  <br/>&nbsp &nbsp ]\
  <br/>}</code>\
  </br>Note that this configuration can override the configuration automatically generated from the reporting API.

pivotTableEdit.bandRequired=Band required
pivotTableEdit.rendererRequired=Please specify default renderer
pivotTableEdit.aggregationsRequired=Please specify aggregations
pivotTableEdit.propertiesRequired=Please specify properties
pivotTableEdit.aggregationPropertiesRequired=Please specify aggregation properties
pivotTableEdit.columnsOrRowsRequired=Please specify columns or rows
pivotTableEdit.propertyIntersection=Properties must not intersect
pivotTableEdit.uniqueAggregationOptionCaption=Aggregation option caption must be unique

validationScript=Validation Script
validationScriptHelp=\  Here you can set a Groovy-script that will check the report parameter value.\
  <br/> The method <code>invalid (String str)</ code> may be used for sending messages about the report validation errors to the user.\
  <br/> The script should check the parameter value and call the "invalid()" method if the value is not valid.\
  <br/>\
  <br/> For example, <code>invalid('Incorrect parameter')</code> corresponds to the message sent in case of an invalid parameter for the report execution.\
  <br/>\
  The following variables are passed into the script:\
  <ul>\
  <li><code>value</code> - the parameter value entered by the user</li>\
  <li><code>dataManager</code> - an object of the <code>DataManager</code> type that provides CRUD functionality</li>\
  <li><code>metadata</code> - an object of the <code>Metadata</code> type that provides access the application metadata</li>\
  <li><code>security</code> - an object of the <code>Security</code> type used to check user access rights to different\
  <br>objects in the system</li>\
  <li><code>userSession</code> - an object of the <code>UserSession</code> type associated with the currently\
  <br>authenticated user</li>\
  <li><code>invalid</code> - groovy closure which effectively fails validation if called from inside the script\
  <ul>\

crossFieldValidationScriptHelp=\  Here you can set a Groovy-script that will cross validate the report parameters before report execution.\
  <br/> The method <code>invalid (String str)</ code> may be used for sending messages about the report validation errors to the user.\
  <br/> The script should check whether or not parameters values make sense in relation to each other and call the "invalid()" method if they do not.\
  <br/>\
  <br/> For example, <code>invalid('Start date has to be before end date')</code> corresponds to the message sent in case if \
  "Start date" parameter happens to be after "End date" parameter. \
  <br/>\
  The following variables are passed into the script:\
  <ul>\
  <li><code>params</code> - external report parameters map</li>\
  <li><code>dataManager</code> - an object of the <code>DataManager</code> type that provides CRUD functionality</li>\
  <li><code>metadata</code> - an object of the <code>Metadata</code> type that provides access the application metadata</li>\
  <li><code>security</code> - an object of the <code>Security</code> type used to check user access rights to different\
  <br>objects in the system</li>\
  <li><code>userSession</code> - an object of the <code>UserSession</code> type associated with the currently\
  <br>authenticated user</li>\
  <li><code>invalid</code> - groovy closure which effectively fails validation if called from inside the script\
  <ul>\
  

  <br/> For example, <code>invalid('Incorrect parameter')</code> corresponds to the message sent in case of an invalid parameter for the report execution.

report.localeTextHelp=Here you can localize the report name - show the name in the language, which\
  <br/>the user is logged in with, in the report list. Enter pairs,\
  <br/><code>locale_name = report_name</code>, as separate lines.\
  <br/>\
  <br/> For example:\
  <br/><code>en = Books by author</code>\
  <br/><code>ru = Книги по автору</code>

parameter.localeTextHelp=Here you can define the parameter name for different locales. In order to do this\
  <br/>you should enter the pairs <code>locale_name = report_name</code>.\
  <br/>\
  <br/> For example:\
  <br/><code>en = Book</code>\
  <br/><code>ru = Книга</code>

parameter.transformationScriptHelp=Allows you to apply a Groovy script on the parameter before using it in the\
  <br/>report. A Groovy script should return new parameter value. Current parameter\
  <br/>value is available in the script by the <code>paramValue</code>, the parameters map is\
  <br/>available by alias <code>params</code>.\
  <br/>\
  <br/>For example:\
  <br/><code>return "%" + paramValue + "%"</code>\

templateEditor.HighlightActiveLine=Highlight Active Line
templateEditor.PrintMargin=Print Margin
templateEditor.ShowGutter=Show Gutter

scriptEditor = Editor
localeText = Localization
transformationScript = Transformation

pivotTable.rendererOptions=Renderer options
pivotTable.aggregationOptions=Aggregation options
pivotTable.defaultAggregation=Default aggregation
pivotTable.propertiesOptions=Properties options
pivotTable.customOptions=Custom options
pivotTable.customFunctions=Custom functions
pivotTable.customC3properties=Custom C3 properties
pivotTable.customHeatmapProperties=Custom heatmap properties

pivotTableAggregationEditor=Aggregation option editor
pivotTablePropertyEditor=Property option editor

pivotTable.functionHelpCaption=Script

pivotTable.propertyFunctionHelp=JavaScript function can be used to add new property to the pivot table\
  <br/>which is derived from the existing ones. This can be useful to make the data more pivot-friendly.\
  <br/>The function takes an existing record and returns the value of the new attribute.\
  <br/>\
  <br/>Here is the source for a very simple deriver which will look for an existing\
  <br/>attribute called <code>Age</code> and return the decade that age belongs to:\
  <br/>\
  <br/><code>function(record) {\
  <br/>&nbsp &nbsp return record.Age - record.Age % 10;\
  <br/>}</code>
pivotTable.aggregationFunctionHelp=JavaScript function can be used as your own aggregation function.\
  <br/>It should be a function which gets called once per cell in the pivot table and returns\
  <br/>an object with the following keys:\
  <ul>\
  <li><code>push</code> - a function which takes a record from the input, this function is called\
  <br/>once per record</li>\
  <li><code>value</code> - a function which returns the value to be stored in the cell</li>\
  <li><code>format</code> - a function which takes a value and returns its formatted string\
  <br/>representation</li>\
  </ul>\
  Here is an example aggregator <code>count</code> which will just return the number of records that match the cell:\
  <br/>\
  <br/><code>function(data, rowKey, colKey) {\
  <br/>&nbsp &nbsp return {\
  <br/>&nbsp &nbsp &nbsp &nbsp count: 0,\
  <br/>&nbsp &nbsp &nbsp &nbsp push: function(record) { this.count++; },\
  <br/>&nbsp &nbsp &nbsp &nbsp value: function() { return this.count; },\
  <br/>&nbsp &nbsp &nbsp &nbsp format: function(x) { return x; },\
  <br/>&nbsp &nbsp};\
  <br/>}</code>